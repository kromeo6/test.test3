apiVersion: sparkoperator.k8s.io/v1alpha1
kind: SparkConnect
metadata:
  name: spark-connect-355-minio-iceberg-hadoop
  namespace: default
spec:
  sparkVersion: 3.5.5
  sparkConf:
    "spark.sql.adaptive.enabled": "true"
    "spark.sql.adaptive.coalescePartitions.enabled": "true"
    
    # MinIO Configuration
    "spark.hadoop.fs.s3a.access.key": "minio"
    "spark.hadoop.fs.s3a.secret.key": "minio123"
    "spark.hadoop.fs.s3a.endpoint": "http://minio-service.kubeflow.svc.cluster.local:9000"
    "spark.hadoop.fs.s3a.path.style.access": "true"
    "spark.hadoop.fs.s3a.impl": "org.apache.hadoop.fs.s3a.S3AFileSystem"
    "spark.hadoop.fs.s3a.connection.ssl.enabled": "false"

    # Apache Iceberg Configuration - Using Hadoop FileIO instead of S3FileIO
    "spark.sql.extensions": "org.apache.iceberg.spark.extensions.IcebergSparkSessionExtensions"
    "spark.sql.catalog.spark_catalog": "org.apache.iceberg.spark.SparkSessionCatalog"
    "spark.sql.catalog.spark_catalog.type": "hive"
    "spark.sql.catalog.local": "org.apache.iceberg.spark.SparkCatalog"
    "spark.sql.catalog.local.type": "hadoop"
    "spark.sql.catalog.local.warehouse": "s3a://test-bucket/iceberg-warehouse/"
    
    # Use Hadoop FileIO instead of S3FileIO (compatible with AWS SDK v1)
    "spark.sql.catalog.local.io-impl": "org.apache.iceberg.hadoop.HadoopFileIO"

    "spark.jars": "/opt/spark/jars/spark-connect_2.12-3.5.5.jar,
      /opt/spark/jars/aws-java-sdk-bundle-1.12.599.jar,
      /opt/spark/jars/hadoop-aws-3.3.4.jar,
      /opt/spark/jars/hadoop-client-api-3.3.4.jar,
      /opt/spark/jars/hadoop-client-runtime-3.3.4.jar,
      /opt/spark/jars/commons-pool-1.6.jar,
      /opt/spark/jars/commons-pool2-2.11.1.jar,
      /opt/spark/jars/iceberg-spark-runtime-3.5_2.12-1.9.2.jar"
  server:
    template:
      metadata:
        labels:
          key1: value1
          key2: value2
        annotations:
          key3: value3
          key4: value4
      spec:
        containers:
        - name: spark-kubernetes-driver
          image: vieno70/spark-delta:3.5.5-minio-iceberg
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 1
              memory: 1Gi
            limits:
              cpu: 1
              memory: 1Gi
        serviceAccount: spark-operator-spark
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 185
          runAsUser: 185
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
  executor:
    instances: 1
    cores: 1
    memory: 512m
    template:
      metadata:
        labels:
          key1: value1
          key2: value2
        annotations:
          key3: value3
          key4: value4
      spec:
        containers:
        - name: spark-kubernetes-executor
          image: vieno70/spark-delta:3.5.5-minio-iceberg
          imagePullPolicy: Always
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 185
          runAsUser: 185
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault 